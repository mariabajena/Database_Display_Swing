
import com.mysql.jdbc.CommunicationsException;
import javax.swing.DefaultListModel;
import javax.swing.ListSelectionModel;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.logging.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

public class myJFrame extends javax.swing.JFrame {
    
    List tablePointColumnList = new ArrayList();
    DefaultListModel tableModel = new DefaultListModel();
    DefaultListModel columnModel = new DefaultListModel();
    List columnList = new ArrayList();
    
    public myJFrame() {
        initComponents();
        tableList.setModel(tableModel);
        jColumnList.setModel(columnModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        multipleIntervalSelectionToggleButton = new javax.swing.JToggleButton();
        singleIntervalSelectionToggleButton = new javax.swing.JToggleButton();
        singleSelectionToggleButton = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableList = new javax.swing.JList<>();
        removeListElementsButton = new javax.swing.JButton();
        passwordField = new javax.swing.JPasswordField();
        loginTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jColumnList = new javax.swing.JList<>();
        tableLabel = new javax.swing.JLabel();
        columnsLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        buttonGroup1.add(multipleIntervalSelectionToggleButton);
        multipleIntervalSelectionToggleButton.setText("Multiple Interval");
        multipleIntervalSelectionToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multipleIntervalSelectionToggleButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(singleIntervalSelectionToggleButton);
        singleIntervalSelectionToggleButton.setText("Single Interval");
        singleIntervalSelectionToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleIntervalSelectionToggleButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(singleSelectionToggleButton);
        singleSelectionToggleButton.setText("Single");
        singleSelectionToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleSelectionToggleButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(singleSelectionToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(singleIntervalSelectionToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(multipleIntervalSelectionToggleButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(singleSelectionToggleButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(singleIntervalSelectionToggleButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(multipleIntervalSelectionToggleButton)
                .addContainerGap())
        );

        tableList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                tableListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(tableList);

        removeListElementsButton.setText("Remove Elements");
        removeListElementsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeListElementsButtonActionPerformed(evt);
            }
        });

        passwordField.setText("password");

        loginTextField.setText("login");

        jLabel1.setText("login:");

        jLabel2.setText("password:");

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(jColumnList);

        tableLabel.setText("Tables:");

        columnsLabel.setText("Columns:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("DISPLAY OF THE MYSQL DATABASE STRUCTURE");

        jLabel4.setText("Selection mode:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(loginTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3))
                .addGap(92, 92, 92))
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tableLabel)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removeListElementsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(columnsLabel)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel3)
                .addGap(22, 22, 22)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(passwordField)
                        .addComponent(jLabel2)
                        .addComponent(loginButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(loginTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addGap(26, 26, 26)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(tableLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(columnsLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(removeListElementsButton)))))
                .addGap(52, 52, 52))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void singleSelectionToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleSelectionToggleButtonActionPerformed
        tableList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }//GEN-LAST:event_singleSelectionToggleButtonActionPerformed

    private void singleIntervalSelectionToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleIntervalSelectionToggleButtonActionPerformed
        tableList.setSelectionMode(ListSelectionModel.SINGLE_INTERVAL_SELECTION);
    }//GEN-LAST:event_singleIntervalSelectionToggleButtonActionPerformed

    private void removeListElementsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeListElementsButtonActionPerformed
        tableList.clearSelection();
        columnModel.clear();
    }//GEN-LAST:event_removeListElementsButtonActionPerformed
    
    private void multipleIntervalSelectionToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multipleIntervalSelectionToggleButtonActionPerformed
        tableList.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
    }//GEN-LAST:event_multipleIntervalSelectionToggleButtonActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
              
        String login, password;
        
        login = loginTextField.getText();
        System.out.println(login);
        password = passwordField.getText();
        
        try{
            if(login.equals("") || password.equals("")) throw new NullCredentialsException();
            else if((login.equals("login")) && (password.equals("password"))){          
                
        singleSelectionToggleButton.setSelected(true);
        tableList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        tableModel.addElement("cliente");
        tableModel.addElement("empleado");
        tableModel.addElement("pedido");
        tableModel.addElement("producto");
        tableModel.addElement("vehiculo");

        tablePointColumnList.add("cliente.nombre");
        tablePointColumnList.add("cliente.apellido");
        tablePointColumnList.add("cliente.edad");
        tablePointColumnList.add("empleado.nombre");
        tablePointColumnList.add("empleado.apellido");
        tablePointColumnList.add("empleado.empresa");
        tablePointColumnList.add("pedido.producto");
        tablePointColumnList.add("pedido.cantidad");
        tablePointColumnList.add("pedido.precio");        
        tablePointColumnList.add("producto.nombre");
        tablePointColumnList.add("producto.precio_unidad");
        tablePointColumnList.add("vehiculo.tipo");
        tablePointColumnList.add("vehiculo.marca");
                
                /*
                Class.forName("com.mysql.jdbc.Driver");

                Connection con = DriverManager.getConnection("jdbc:mysql://mozart.dis.ulpgc.es/DIU_BD?useSSL=true",
                "login",
                "password");
                System.out.println("Connection opened");

                DatabaseMetaData md = con.getMetaData();
                String[] types = {"TABLE"};
                ResultSet rs = md.getTables(null, null, "%", types);
                
                while (rs.next()) {
                    String tableName = rs.getString("TABLE_NAME");
                    this.columnList.add(tableName);
                    tableModel.addElement(tableName);
                    ResultSet rs2 = md.getColumns(null, null, tableName, null);
                    
                    while (rs2.next()) {
                        String columnName = rs2.getString("COLUMN_NAME");
                        this.tablePointColumnList.add(tableName + "." + columnName);
                    }
                }
                
                con.close();
                System.out.println("Connection closed");
                
                singleSelectionToggleButton.setSelected(true);
                tableList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        */        
        }
        
            else throw new IncorrectCredentialsException();
        /*    
        } catch (CommunicationsException ex) {
            //System.out.println("Error" + ex);
            JOptionPane.showMessageDialog(new JFrame(), "Database network connection error!");
                                
                
        } catch (ClassNotFoundException ex) {
                System.out.println("Error" + ex);
                JOptionPane.showMessageDialog(new JFrame(), "Database connection error!");
        } catch (SQLException ex) {
                System.out.println("Error" + ex);
                JOptionPane.showMessageDialog(new JFrame(), "Database connection error!");
        */
        
        } catch (NullCredentialsException ex) {
        } catch (IncorrectCredentialsException ex) {
        }
    
    }//GEN-LAST:event_loginButtonActionPerformed

    
    private void tableListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_tableListValueChanged
        String searchedText, input;
        
        if (!evt.getValueIsAdjusting()) {
            columnModel.clear();
            int[] selectedIx = tableList.getSelectedIndices();
             
            // Get all the selected items using the indices
            for (int j = 0; j < selectedIx.length; j++) {
                Object sel = tableList.getModel().getElementAt(selectedIx[j]);
                searchedText = sel + ".";
                for (int i = 0; i < tablePointColumnList.size(); i++) {
                    input = (String)tablePointColumnList.get(i);
                    if (input.indexOf(searchedText) !=-1)  //true
                        columnModel.addElement(input);
                }                                               
            }
        }
        
        /*
        if (!evt.getValueIsAdjusting()) {
            columnModel.clear();
            int[] selectedIx = tableList.getSelectedIndices();
             
            // Get all the selected items using the indices
            for (int i = 0; i < selectedIx.length; i++) {
                Object sel = tableList.getModel().getElementAt(selectedIx[i]);
                columnModel.addElement(sel);
            }
        }
        */

    }//GEN-LAST:event_tableListValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(myJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(myJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(myJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(myJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new myJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel columnsLabel;
    private javax.swing.JList<String> jColumnList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton loginButton;
    private javax.swing.JTextField loginTextField;
    private javax.swing.JToggleButton multipleIntervalSelectionToggleButton;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JButton removeListElementsButton;
    private javax.swing.JToggleButton singleIntervalSelectionToggleButton;
    private javax.swing.JToggleButton singleSelectionToggleButton;
    private javax.swing.JLabel tableLabel;
    private javax.swing.JList<String> tableList;
    // End of variables declaration//GEN-END:variables

    private static class NullCredentialsException extends Exception {

        public NullCredentialsException() {
            JOptionPane.showMessageDialog(new JFrame(), "Insert login and password!");
        }
    }

    private static class IncorrectCredentialsException extends Exception {

        public IncorrectCredentialsException() {
            JOptionPane.showMessageDialog(new JFrame(), "Incorrect login or password!");
        }
    }

}
